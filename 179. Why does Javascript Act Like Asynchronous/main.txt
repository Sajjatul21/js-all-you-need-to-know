javascript uses two data structure to handle variable and function calls

1. heap to manage variable, arr, obj
2. Stack to manage Function calls

javascript is a Single Threaded


### тЬЕ **JavaScript ржХрж┐ Single-Threaded?**  
рж╣рзНржпрж╛ржБ, **JavaScript рж╣рж▓рзЛ ржПржХржЯрж┐ Single-Threaded рж▓рзНржпрж╛ржЩрзНржЧрзБржпрж╝рзЗржЬ**ред ржПрж░ ржорж╛ржирзЗ, ржПржЯрж┐ ржПржХрж╕рж╛ржерзЗ **ржПржХржЯрж┐ ржорж╛рждрзНрж░ ржХрж╛ржЬ (task) ржмрж╛ ржЕржкрж╛рж░рзЗрж╢ржи** ржЪрж╛рж▓рж╛рждрзЗ ржкрж╛рж░рзЗред  

---

### ЁЯФ╣ **Single-Threaded ржорж╛ржирзЗ ржХрзА?**  
ЁЯУМ **Single-threaded** ржнрж╛рж╖рж╛рзЯ **ржПржХржЯрж┐ ржорж╛рждрзНрж░ Call Stack** ржерж╛ржХрзЗред ржЕрж░рзНржерж╛рзО, JavaScript **ржПржХржЯрж┐ рж╕ржорзЯ ржПржХржЯрж┐ржорж╛рждрзНрж░ ржХрж╛ржЬ** ржХрж░рждрзЗ ржкрж╛рж░рзЗ ржПржмржВ ржкрж░ржмрж░рзНрждрзА ржХрж╛ржЬ ржХрж░рждрзЗ рж╣рж▓рзЗ **ржЖржЧрзЗрж░ ржХрж╛ржЬ рж╢рзЗрж╖ ржХрж░рждрзЗ рж╣рзЯ**ред  

#### ЁЯФ╣ **ржХрзАржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ?**
1. **Call Stack** - ржХрзЛржб **рж╕рж┐ржХрзЛрзЯрзЗржирзНрж╕ ржЕржирзБржпрж╛рзЯрзА** ржПржХрзНрж╕рж┐ржХрж┐ржЙржЯ рж╣рзЯред  
2. **Blocking Behavior** - ржПржХржЯрж┐ ржХрж╛ржЬ ржЪрж▓рж▓рзЗ ржЕржирзНржп ржХрж╛ржЬ **ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░рзЗ**ред  
3. **Synchronous Execution** - рж╕ржмржХрж┐ржЫрзБ **ржПржХржЯрж╛рж░ ржкрж░ ржПржХржЯрж╛** ржЪрж▓рзЗред  

---

### ЁЯФ╣ **ржЙржжрж╛рж╣рж░ржг (Single-Threaded Execution)**
```js
console.log("Task 1");
console.log("Task 2");
console.log("Task 3");
```
ЁЯУМ **ржЖржЙржЯржкрзБржЯ:**  
```
Task 1  
Task 2  
Task 3  
```
тЮб JavaScript ржПржХ рж▓рж╛ржЗржирзЗрж░ ржХрж╛ржЬ рж╢рзЗрж╖ ржирж╛ ржХрж░рж╛ ржкрж░рзНржпржирзНржд ржкрж░ржмрж░рзНрждрзА рж▓рж╛ржЗржирзЗ ржпрж╛рзЯ ржирж╛ред  

---

### ЁЯФ╣ **рждрж╛рж╣рж▓рзЗ JavaScript Asynchronous ржХрж╛ржЬ ржХрж┐ржнрж╛ржмрзЗ ржХрж░рзЗ?**  
ржпрзЗрж╣рзЗрждрзБ JavaScript **Single-Threaded**, рждрж╛рж╣рж▓рзЗ **Asynchronous ржХрж╛ржЬ** (ржпрзЗржоржи: API Call, Timer, Event Listener) ржХрж┐ржнрж╛ржмрзЗ рж╕ржорзНржнржм? ЁЯдФ  

ЁЯСЙ ржПрж░ ржЙрждрзНрждрж░ рж╣рж▓рзЛ **Event Loop & Web APIs**!  

ЁЯФ╣ ржпржЦржи ржХрзЛржирзЛ **Asynchronous task** (ржпрзЗржоржи `setTimeout()`, `fetch()`) ржЪрж▓рзЗ, рждржЦржи JavaScript ржПржЯрж┐ **Call Stack** ржерзЗржХрзЗ рж╕рж░рж┐рзЯрзЗ **Web APIs**-ржПрж░ ржХрж╛ржЫрзЗ ржкрж╛ржарж╛рзЯред  

### ЁЯФ╣ **ржЙржжрж╛рж╣рж░ржг (Asynchronous Execution)**
```js
console.log("Task 1");

setTimeout(() => {
  console.log("Task 2");
}, 2000);

console.log("Task 3");
```
ЁЯУМ **ржЖржЙржЯржкрзБржЯ:**  
```
Task 1  
Task 3  
Task 2 (2 рж╕рзЗржХрзЗржирзНржб ржкрж░рзЗ)  
```
тЮб ржПржЦрж╛ржирзЗ `setTimeout()` **Web API-рждрзЗ ржкрж╛ржарж╛ржирзЛ рж╣рзЯ** ржПржмржВ ржмрж╛ржХрж┐ ржХрж╛ржЬржЧрзБрж▓рзЛ ржЪрж▓рждрзЗ ржерж╛ржХрзЗред  

---

### ЁЯФ╣ **JavaScript ржХрж┐ рж╕рждрзНржпрж┐ржЗ Single-Threaded?**  
тЬФ **JavaScript Engine** (ржпрзЗржоржи: V8, SpiderMonkey) **Single-Threaded**ред  
тЬФ ржХрж┐ржирзНрждрзБ **JavaScript Runtime (ржпрзЗржоржи: Browser, Node.js)** **Asynchronous Task Handle ржХрж░рждрзЗ ржкрж╛рж░рзЗ**ред  
тЬФ **Event Loop + Web API + Callback Queue** ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ **JavaScript Asynchronous рж╣рзЯрзЗ ржУржарзЗ**ред  

тЬЕ **рждрзБржорж┐ ржЪрж╛ржЗрж▓рзЗ Multi-threading ржПрж░ ржорждрзЛ ржХрж╛ржЬ ржХрж░рждрзЗ ржкрж╛рж░рзЛ** тЮЭ `Web Workers` ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗред  

---

### ЁЯФ╣ **рж╕ржВржХрзНрж╖рзЗржкрзЗ**  
| ржмрж┐рж╖рзЯ | ржмрзНржпрж╛ржЦрзНржпрж╛ |
|-------|---------|
| **Single-Threaded** | рж╣рзНржпрж╛ржБ, JavaScript ржПржХржЗ рж╕ржорзЯрзЗ ржПржХржЯрж┐ ржХрж╛ржЬ ржХрж░рзЗред |
| **Blocking** | рж╣рзНржпрж╛ржБ, ржпржжрж┐ ржХрзЛржирзЛ ржХрж╛ржЬ ржжрзАрж░рзНржШ рж╕ржорзЯ ржирзЗрзЯ, ржЕржирзНржп ржХрж╛ржЬ ржмрзНрж▓ржХ рж╣рзЯрзЗ ржпрж╛рзЯред |
| **Asynchronous Execution** | Event Loop, Web API, Callback Queue ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ рж╕ржорзНржнржмред |
| **Multi-threading рж╕ржорзНржнржм?** | рж╕рж╛ржзрж╛рж░ржгржнрж╛ржмрзЗ ржирж╛, рждржмрзЗ Web Workers ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ ржпрж╛рзЯред |

---

тЬЕ **рждрзБржорж┐ ржпржжрж┐ Event Loop, Callback Queue ржмрж╛ Web Workers ржирж┐рзЯрзЗ ржЬрж╛ржирждрзЗ ржЪрж╛ржУ, рждрж╛рж╣рж▓рзЗ ржмрж▓рзЛ! ЁЯШК**